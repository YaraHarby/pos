# Generated by Django 5.2.3 on 2025-08-01 12:32

import django.db.models.deletion
import django_tenants.postgresql_backend.base
import tenants.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "schema_name",
                    models.CharField(
                        db_index=True,
                        max_length=63,
                        unique=True,
                        validators=[
                            django_tenants.postgresql_backend.base._check_schema_name
                        ],
                    ),
                ),
                ("arabic_name", models.CharField(max_length=100)),
                ("english_name", models.CharField(blank=True, max_length=100)),
                ("Commercial_Record", models.IntegerField()),
                (
                    "Subscription_Price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("Currency", models.CharField(default="SAR", max_length=10)),
                ("subdomain", models.CharField(max_length=255, unique=True)),
                ("Start_Date", models.DateField(auto_now_add=True)),
                ("End_Date", models.DateField()),
                ("on_trial", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("no_users", models.IntegerField(default=1)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="tenants/"),
                ),
                (
                    "modules_enabled",
                    models.JSONField(default=tenants.models.default_extra_data),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("domain", models.CharField(max_length=253)),
                ("is_primary", models.BooleanField(default=False)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="domains",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Branch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("contact_email", models.EmailField(blank=True, max_length=254)),
                ("contact_phone", models.CharField(blank=True, max_length=20)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="branches",
                        to="tenants.tenant",
                    ),
                ),
            ],
        ),
    ]
